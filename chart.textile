---
layout: default
title: Chart API
---

{{>toc}}

This is *INTERNAL* documentation on our unofficial Chart API. This works with the current, 1.7.0 version of charts. There are potential inconsistencies between calling for Features from Finder vs. from the Flash, so for now be careful. We can smooth it out to be consistent soon.

h2. Table Grid


Method: F1.Visualizer.charts.grid(height, width, data, dom_id);

Example: 

<pre><code class="javascript">
F1.Visualizer.utils.get_data_from_flash("14", function(data) {
    var features = jq.map(data.features, function(feature) { 
    if (feature) { 
    return feature.attributes} });

    data.features = features;
    F1.Visualizer.charts.grid(600, "100%", data, "projects-table");
 }, map);
</code></pre>

h2. Bar Chart

Method: F1.Visualizer.charts.bar(height, width, bar_options, dom_id);

Example: 

!Bar_Chart.png!

<pre><code class="javascript">
 F1.Visualizer.utils.get_data_from_flash("14", function(data) {
    var features = jq.map(data.features, function(feature) { 
      if (feature) { 
         return feature.attributes} 
      });

    data.features = features;

    bar_options = {"features":features, "attributes": {"data":{"name": "Number of Projects", "original_name": "projects0"}, "description":{"name": "Commune", "original_name": "commune0"}, "sort":{"name": "Number of Projects","original_name": "projects0"} } };
    F1.Visualizer.charts.bar(180, 455, bar_options, "graphael-graph-1");
  }, map);
</code></pre>

h2. Pie Chart

Method: F1.Visualizer.charts.pie(height, width, options, dom_id);

Example: 

!Pie_Chart.png!

<pre><code class="javascript">
 F1.Visualizer.utils.get_data_from_flash("14", function(data) {
    var features = jq.map(data.features, function(feature) { 
      if (feature) { 
      return feature.attributes} });

    data.features = features;
    // F1.Visualizer.charts.grid(600, "100%", data, "projects-table");

    pie_options = {"features":features, "attributes": {"data":{"name": "Number of Projects","original_name": "projects0"}, "description":{"name": "Commune","original_name": "commune0"}, "sort":{"name": "Number of Projects","original_name": "projects0"} } };
    F1.Visualizer.charts.pie(180, 455, pie_options, "graphael-graph-2");

  }, map);
</code></pre>

h2. Scatterplot

Method: F1.Visualizer.charts.scatterplot(height, width, options, dom_id);

Example: 

!Scatterplot.png!

<pre><code class="javascript">
 F1.Visualizer.utils.get_data_from_flash("14", function(data) {
    var features = jq.map(data.features, function(feature) { 
      if (feature) { 
      return feature.attributes} });

    data.features = features;

    pie_options = {"features":features, "attributes": {"data":{"name": "Number of Projects","original_name": "projects0"}, "description":{"name": "Commune","original_name": "commune0"}, "sort":{"name": "Number of Projects","original_name": "projects0"} } };
    F1.Visualizer.charts.scatterplot(180, 455, pie_options, "graphael-graph-3");

  }, map);
</code></pre>

h2. Line Chart

Method: F1.Visualizer.charts.line(height, width, options, dom_id);

Example: 

!Line_Chart.png!

<pre><code class="javascript">
 F1.Visualizer.utils.get_data_from_flash("14", function(data) {
    var features = jq.map(data.features, function(feature) { 
      if (feature) { 
      return feature.attributes} });

    data.features = features;

    pie_options = {"features":features, "attributes": {"data":{"name": "Number of Projects","original_name": "projects0"}, "description":{"name": "Commune","original_name": "commune0"}, "sort":{"name": "Number of Projects","original_name": "projects0"} } };
    F1.Visualizer.charts.line(180, 455, pie_options, "graphael-graph-5");

  }, map);
</code></pre>

h2. Area Chart

Method: F1.Visualizer.charts.area(height, width, options, dom_id);

Example: 

!Area_Chart.png!

<pre><code class="javascript">
 F1.Visualizer.utils.get_data_from_flash("14", function(data) {
    var features = jq.map(data.features, function(feature) { 
      if (feature) { 
      return feature.attributes} });

    data.features = features

    pie_options = {"features":features, "attributes": {"data":{"name": "Number of Projects","original_name": "projects0"}, "description":{"name": "Commune","original_name": "commune0"}, "sort":{"name": "Number of Projects","original_name": "projects0"} } };
    F1.Visualizer.charts.area(180, 455, pie_options, "graphael-graph-4");

  }, map);
</code></pre>

h2. get_data_from_flash

F1.Visualizer.utils.get_data_from_flash(dataset_id, callback_function, map_object)


<pre><code class="javascript">
 F1.Visualizer.utils.get_data_from_flash("14", function(data) {
    var total_projects = 0;
    var total_clusters = 9; // todo - clusters weren't included in the aggregation    
    var features = jq.map(data.features, function(feature) { 
      if (feature) { 
        if(feature.attributes[filter] == filter_value) {
        total_projects += feature.attributes["projects0"];
      }
      return feature.attributes} });

      jq('.summary').html(total_projects + " projects <span class='small-text'>covering</span><br />" + total_clusters + " clusters");
  }, map);
</code></pre>